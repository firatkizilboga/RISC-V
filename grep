Compiling and running core...
iverilog -o build/core-test.vvp core/test.v
vvp build/core-test.vvp
WARNING: ./memory/memory.v:128: $readmemh(memory/instructions.mem): Not enough words in the file for the requested range [0:1024].
WARNING: ./memory/memory.v:73: $readmemh(memory/data.mem): Not enough words in the file for the requested range [0:8200].
out vals xxxxxxxx xxxxxxxx
Writing to file!
write select xx
data in xxxxxxxx
set x
reset x
addr: 0x00000000
Register x          0: x00000000
Register x          1: x00000000
Register x          2: x00000000
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = 00000004 in1 = xxxxxxxx in2 = xxxxxxxx, sel xx, time =                    0
mux3 out: 0xZzzzzzzz
inside the mux3, in0 = 00000004 in1 = xxxxxxxx in2 = xxxxxxxx, sel 01, time =                    0
mux3 out: 0xxxxxxxxx
out vals 00000000 00000000
Instruction: 0b11111101000000010000000100010011
Func3: 0x0
Types
R_TYPE: 0
I_TYPE: 1
J_TYPE: 0
U_TYPE: 0
LOAD TYPE: 0
JALR TYPE: 0
B_TYPE: 0
S_TYPE: 0
LUI_TYPE: 0
AUIPC_TYPE: 0
############################
Time:                   60, Clock: 1
PC_IN_MUX.out: 00000004
PC.out: 00000000
PCNext.out: 00000004
PCNext.PC: 00000000
IM.data_out: 0xfd010113
DCU.PC_IN_MUX_SEL: 0
DCU.RF_WR_EN: 1
DCU.RF_SEL_1: 02
DCU.RF_SEL_2: 00
DCU.RF_SEL_RD: 02
DCU.RF_DATA_IN_MUX_SEL: 1
DCU.ALU_OP_1_MUX_SEL: 1
DCU.ALU_OP_2_MUX_SEL: 1
DCU.ALU_OPCODE: 0
DCU.immediate: 0xffffffd0
DCU.DATA_MEMORY_WR_EN: 0
DCU.DATA_MEMORY_SIZE_SEL: 3
DCU.DATA_MEMORY_SIGN_EXTEND: 0
RF.reg_1: 00000000, RF.reg_2: 00000000
ALU_OP_1_MUX.out: 00000000
ALU_OP_2_MUX.out: ffffffd0
ALU_32.out: xxxxxxxx
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: xxxxxxxx
out: 0xffffffd0 zero: 1 op_1: 0
inside the mux3, in0 = 00000004 in1 = ffffffd0 in2 = xxxxxxxx, sel 01, time =                   60
mux3 out: 0xffffffd0
write select 02
data in ffffffd0
set 0
reset 0
addr: 0x00000004
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out vals ffffffd0 00000000
inside the mux3, in0 = 00000008 in1 = ffffffd0 in2 = xxxxxxxx, sel 01, time =                  120
mux3 out: 0xffffffd0
inside the mux3, in0 = 00000008 in1 = ffffffd0 in2 = xxxxxxxx, sel 00, time =                  120
mux3 out: 0x00000008
out vals ffffffd0 00000000
Instruction: 0b00000010100000010010011000100011
Func3: 0x2
Types
R_TYPE: 0
I_TYPE: 0
J_TYPE: 0
U_TYPE: 0
LOAD TYPE: 0
JALR TYPE: 0
B_TYPE: 0
S_TYPE: 1
LUI_TYPE: 0
AUIPC_TYPE: 0
out: 0xfffffffc zero: 0 op_1: 1
############################
Time:                  180, Clock: 1
PC_IN_MUX.out: 00000008
PC.out: 00000008
PCNext.out: 00000008
PCNext.PC: 00000008
IM.data_out: 0x02812623
DCU.PC_IN_MUX_SEL: 0
DCU.RF_WR_EN: 0
DCU.RF_SEL_1: 02
DCU.RF_SEL_2: 08
DCU.RF_SEL_RD: 00
DCU.RF_DATA_IN_MUX_SEL: 0
DCU.ALU_OP_1_MUX_SEL: 1
DCU.ALU_OP_2_MUX_SEL: 1
DCU.ALU_OPCODE: 0
DCU.immediate: 0x0000002c
DCU.DATA_MEMORY_WR_EN: 1
DCU.DATA_MEMORY_SIZE_SEL: 3
DCU.DATA_MEMORY_SIGN_EXTEND: 1
RF.reg_1: ffffffd0, RF.reg_2: 00000000
ALU_OP_1_MUX.out: ffffffd0
ALU_OP_2_MUX.out: 0000002c
ALU_32.out: fffffffc
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: 00000008
inside the mux3, in0 = 00000008 in1 = fffffffc in2 = xxxxxxxx, sel 00, time =                  180
mux3 out: 0x00000008
DATA MEMORY WRITE addr: 0xfffffffc
data_in: 0x00000000
write select 00
data in 00000008
set 0
reset 0
Writing to file!
addr: 0x00000008
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = 0000000c in1 = fffffffc in2 = xxxxxxxx, sel 00, time =                  240
mux3 out: 0x0000000c
inside the mux3, in0 = 0000000c in1 = fffffffc in2 = xxxxxxxx, sel 01, time =                  240
mux3 out: 0xfffffffc
out vals 00000000 00000000
out vals ffffffd0 00000000
Instruction: 0b00000011000000010000010000010011
Func3: 0x0
Types
R_TYPE: 0
I_TYPE: 1
J_TYPE: 0
U_TYPE: 0
LOAD TYPE: 0
JALR TYPE: 0
B_TYPE: 0
S_TYPE: 0
LUI_TYPE: 0
AUIPC_TYPE: 0
############################
Time:                  300, Clock: 1
PC_IN_MUX.out: 0000000c
PC.out: 00000008
PCNext.out: 0000000c
PCNext.PC: 00000008
IM.data_out: 0x03010413
DCU.PC_IN_MUX_SEL: 0
DCU.RF_WR_EN: 1
DCU.RF_SEL_1: 02
DCU.RF_SEL_2: 00
DCU.RF_SEL_RD: 08
DCU.RF_DATA_IN_MUX_SEL: 1
DCU.ALU_OP_1_MUX_SEL: 1
DCU.ALU_OP_2_MUX_SEL: 1
DCU.ALU_OPCODE: 0
DCU.immediate: 0x00000030
DCU.DATA_MEMORY_WR_EN: 0
DCU.DATA_MEMORY_SIZE_SEL: 3
DCU.DATA_MEMORY_SIGN_EXTEND: 0
RF.reg_1: ffffffd0, RF.reg_2: 00000000
ALU_OP_1_MUX.out: ffffffd0
ALU_OP_2_MUX.out: 00000030
ALU_32.out: fffffffc
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: fffffffc
out: 0x00000000 zero: 0 op_1: 1
inside the mux3, in0 = 0000000c in1 = 00000000 in2 = xxxxxxxx, sel 01, time =                  300
mux3 out: 0x00000000
write select 08
data in 00000000
set 0
reset 0
addr: 0x0000000c
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = 00000010 in1 = 00000000 in2 = xxxxxxxx, sel 01, time =                  360
mux3 out: 0x00000000
inside the mux3, in0 = 00000010 in1 = 00000000 in2 = xxxxxxxx, sel 00, time =                  360
mux3 out: 0x00000010
out vals 00000000 00000000
inside the mux3, in0 = 00000010 in1 = 00000000 in2 = 000000xx, sel 00, time =                  360
mux3 out: 0x00000010
Instruction: 0b11111110000001000000011110100011
Func3: 0x0
Types
R_TYPE: 0
I_TYPE: 0
J_TYPE: 0
U_TYPE: 0
LOAD TYPE: 0
JALR TYPE: 0
B_TYPE: 0
S_TYPE: 1
LUI_TYPE: 0
AUIPC_TYPE: 0
out: 0xffffffef zero: 1 op_1: 0
############################
Time:                  420, Clock: 1
PC_IN_MUX.out: 00000010
PC.out: 00000010
PCNext.out: 00000010
PCNext.PC: 00000010
IM.data_out: 0xfe0407a3
DCU.PC_IN_MUX_SEL: 0
DCU.RF_WR_EN: 0
DCU.RF_SEL_1: 08
DCU.RF_SEL_2: 00
DCU.RF_SEL_RD: 00
DCU.RF_DATA_IN_MUX_SEL: 0
DCU.ALU_OP_1_MUX_SEL: 1
DCU.ALU_OP_2_MUX_SEL: 1
DCU.ALU_OPCODE: 0
DCU.immediate: 0xffffffef
DCU.DATA_MEMORY_WR_EN: 1
DCU.DATA_MEMORY_SIZE_SEL: 0
DCU.DATA_MEMORY_SIGN_EXTEND: 1
RF.reg_1: 00000000, RF.reg_2: 00000000
ALU_OP_1_MUX.out: 00000000
ALU_OP_2_MUX.out: ffffffef
ALU_32.out: ffffffef
DM.data_out: 000000xx
RF_DATA_IN_MUX.out: 00000010
inside the mux3, in0 = 00000010 in1 = ffffffef in2 = 000000xx, sel 00, time =                  420
mux3 out: 0x00000010
DATA MEMORY WRITE addr: 0xffffffef
data_in: 0x00000000
write select 00
data in 00000010
set 0
reset 0
Writing to file!
addr: 0x00000010
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = 00000014 in1 = ffffffef in2 = 000000xx, sel 00, time =                  480
mux3 out: 0x00000014
out vals 00000000 00000000
inside the mux3, in0 = 00000014 in1 = ffffffef in2 = xxxxxxxx, sel 00, time =                  480
mux3 out: 0x00000014
Instruction: 0b00001011100000000000000001101111
Func3: 0x0
Types
R_TYPE: 0
I_TYPE: 0
J_TYPE: 1
U_TYPE: 0
LOAD TYPE: 0
JALR TYPE: 0
B_TYPE: 0
S_TYPE: 0
LUI_TYPE: 0
AUIPC_TYPE: 0
############################
Time:                  540, Clock: 1
PC_IN_MUX.out: ffffffef
PC.out: 00000010
PCNext.out: 00000014
PCNext.PC: 00000010
IM.data_out: 0x0b80006f
DCU.PC_IN_MUX_SEL: 1
DCU.RF_WR_EN: 1
DCU.RF_SEL_1: 00
DCU.RF_SEL_2: 00
DCU.RF_SEL_RD: 00
DCU.RF_DATA_IN_MUX_SEL: 0
DCU.ALU_OP_1_MUX_SEL: 0
DCU.ALU_OP_2_MUX_SEL: 1
DCU.ALU_OPCODE: 0
DCU.immediate: 0x000000b8
DCU.DATA_MEMORY_WR_EN: 0
DCU.DATA_MEMORY_SIZE_SEL: 3
DCU.DATA_MEMORY_SIGN_EXTEND: 0
RF.reg_1: 00000000, RF.reg_2: 00000000
ALU_OP_1_MUX.out: 00000010
ALU_OP_2_MUX.out: 000000b8
ALU_32.out: ffffffef
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: 00000014
out: 0x000000c8 zero: 0 op_1: 1
inside the mux3, in0 = 00000014 in1 = 000000c8 in2 = xxxxxxxx, sel 00, time =                  540
mux3 out: 0x00000014
write select 00
data in 00000014
set 0
reset 0
addr: 0xffffffef
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = fffffff3 in1 = 000000c8 in2 = xxxxxxxx, sel 00, time =                  600
mux3 out: 0xfffffff3
inside the mux3, in0 = fffffff3 in1 = 000000c8 in2 = xxxxxxxx, sel 0x, time =                  600
mux3 out: 0xZzzzzzzz
out vals xxxxxxxx xxxxxxxx
inside the mux3, in0 = fffffff3 in1 = 000000c8 in2 = xxxxxxxx, sel xx, time =                  600
mux3 out: 0xZzzzzzzz
Instruction: 0bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Func3: 0xx
Types
R_TYPE: x
I_TYPE: x
J_TYPE: x
U_TYPE: x
LOAD TYPE: x
JALR TYPE: x
B_TYPE: x
S_TYPE: x
LUI_TYPE: x
AUIPC_TYPE: x
out: 0x00000000 zero: 0 op_1: 0
############################
Time:                  660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: fffffff3
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
inside the mux3, in0 = fffffff3 in1 = 00000000 in2 = xxxxxxxx, sel xx, time =                  660
mux3 out: 0xZzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
inside the mux3, in0 = xxxxxxxx in1 = 00000000 in2 = xxxxxxxx, sel xx, time =                  720
mux3 out: 0xZzzzzzzz
############################
Time:                  780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                  900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 1020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 1140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 1260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 1380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 1500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 1620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 1740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 1860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 1980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 2100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 2220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 2340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 2460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 2580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 2700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 2820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 2940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 3060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 3180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 3300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 3420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 3540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 3660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 3780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 3900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 4020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 4140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 4260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 4380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 4500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 4620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 4740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 4860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 4980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 5100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 5220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 5340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 5460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 5580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 5700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 5820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 5940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 6060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 6180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 6300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 6420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 6540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 6660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 6780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 6900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 7020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 7140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 7260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 7380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 7500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 7620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 7740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 7860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 7980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 8100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 8220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 8340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 8460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 8580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 8700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 8820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 8940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 9060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 9180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 9300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 9420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 9540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 9660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                 9780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                 9900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                10020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                10140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                10260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                10380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                10500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                10620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                10740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                10860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                10980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                11100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                11220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                11340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                11460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                11580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                11700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                11820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                11940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                12060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                12180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                12300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                12420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                12540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                12660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                12780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                12900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                13020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                13140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                13260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                13380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                13500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                13620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                13740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                13860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                13980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                14100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                14220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                14340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                14460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                14580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                14700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                14820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                14940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                15060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                15180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                15300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                15420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                15540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                15660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                15780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                15900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                16020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                16140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                16260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                16380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                16500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                16620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                16740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                16860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                16980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                17100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                17220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                17340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                17460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                17580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                17700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                17820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                17940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                18060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                18180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                18300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                18420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                18540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                18660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                18780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                18900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                19020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                19140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                19260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                19380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                19500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                19620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                19740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                19860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                19980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                20100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                20220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                20340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                20460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                20580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                20700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                20820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                20940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                21060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                21180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                21300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                21420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                21540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                21660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                21780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                21900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                22020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                22140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                22260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                22380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                22500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                22620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                22740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                22860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                22980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                23100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                23220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                23340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                23460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                23580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                23700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                23820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                23940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                24060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                24180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                24300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                24420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                24540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                24660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                24780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                24900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                25020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                25140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                25260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                25380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                25500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                25620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                25740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                25860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                25980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                26100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                26220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                26340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                26460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                26580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                26700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                26820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                26940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                27060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                27180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                27300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                27420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                27540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                27660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                27780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                27900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                28020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                28140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                28260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                28380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                28500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                28620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                28740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                28860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                28980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                29100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                29220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                29340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                29460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                29580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                29700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                29820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                29940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                30060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                30180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                30300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                30420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                30540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                30660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                30780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                30900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                31020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                31140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                31260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                31380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                31500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                31620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                31740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                31860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                31980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                32100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                32220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                32340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                32460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                32580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                32700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                32820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                32940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                33060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                33180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                33300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                33420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                33540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                33660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                33780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                33900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                34020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                34140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                34260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                34380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                34500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                34620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                34740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                34860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                34980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                35100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                35220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                35340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                35460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                35580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                35700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                35820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                35940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                36060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                36180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                36300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                36420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                36540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                36660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                36780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                36900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                37020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                37140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                37260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                37380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                37500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                37620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                37740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                37860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                37980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                38100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                38220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                38340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                38460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                38580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                38700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                38820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                38940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                39060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                39180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                39300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                39420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                39540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                39660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                39780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                39900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                40020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                40140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                40260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                40380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                40500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                40620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                40740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                40860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                40980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                41100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                41220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                41340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                41460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                41580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                41700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                41820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                41940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                42060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                42180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                42300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                42420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                42540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                42660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                42780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                42900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                43020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                43140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                43260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                43380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                43500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                43620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                43740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                43860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                43980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                44100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                44220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                44340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                44460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                44580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                44700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                44820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                44940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                45060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                45180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                45300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                45420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                45540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                45660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                45780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                45900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                46020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                46140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                46260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                46380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                46500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                46620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                46740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                46860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                46980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                47100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                47220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                47340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                47460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                47580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                47700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                47820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                47940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                48060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                48180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                48300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                48420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                48540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                48660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                48780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                48900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                49020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                49140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                49260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                49380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                49500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                49620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                49740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                49860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                49980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                50100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                50220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                50340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                50460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                50580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                50700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                50820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                50940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                51060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                51180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                51300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                51420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                51540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                51660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                51780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                51900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                52020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                52140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                52260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                52380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                52500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                52620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                52740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                52860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                52980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                53100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                53220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                53340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                53460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                53580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                53700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                53820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                53940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                54060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                54180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                54300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                54420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                54540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                54660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                54780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                54900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                55020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                55140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                55260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                55380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                55500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                55620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                55740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                55860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                55980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                56100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                56220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                56340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                56460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                56580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                56700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                56820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                56940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                57060, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                57180, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                57300, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                57420, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                57540, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                57660, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                57780, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                57900, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                58020, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                58140, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                58260, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                58380, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                58500, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                58620, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                58740, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                58860, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                58980, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                59100, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                59220, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                59340, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                59460, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                59580, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                59700, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
data in Zzzzzzzz
set x
reset x
Writing to file!
addr: 0xZzzzzzzz
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
############################
Time:                59820, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
out: 0x00000000 zero: 1 op_1: 0
write select xx
data in Zzzzzzzz
set x
reset x
addr: 0xZzzzzzzz
Writing to file!
Register x          0: x00000000
Register x          1: x00000000
Register x          2: xffffffd0
Register x          3: x00000000
Register x          4: x00000000
Register x          5: x00000000
Register x          6: x00000000
Register x          7: x00000000
Register x          8: x00000000
Register x          9: x00000000
Register x         10: x00000000
Register x         11: x00000000
Register x         12: x00000000
Register x         13: x00000000
Register x         14: x00000000
Register x         15: x00000000
Register x         16: x00000000
Register x         17: x00000000
Register x         18: x00000000
Register x         19: x00000000
Register x         20: x00000000
Register x         21: x00000000
Register x         22: x00000000
Register x         23: x00000000
Register x         24: x00000000
Register x         25: x00000000
Register x         26: x00000000
Register x         27: x00000000
Register x         28: x00000000
Register x         29: x00000000
Register x         30: x00000000
Register x         31: x00000000
memor[0x00000fa0] -> 0xxx
memor[0x00000fa1] -> 0xxx
memor[0x00000fa2] -> 0xxx
memor[0x00000fa3] -> 0xxx
memor[0x00000fa4] -> 0xxx
memor[0x00000fa5] -> 0xxx
memor[0x00000fa6] -> 0xxx
memor[0x00000fa7] -> 0xxx
memor[0x00000fa8] -> 0xxx
memor[0x00000fa9] -> 0xxx
memor[0x00000faa] -> 0xxx
memor[0x00000fab] -> 0xxx
memor[0x00000fac] -> 0xxx
memor[0x00000fad] -> 0xxx
memor[0x00000fae] -> 0xxx
memor[0x00000faf] -> 0xxx
memor[0x00000fb0] -> 0xxx
memor[0x00000fb1] -> 0xxx
memor[0x00000fb2] -> 0xxx
memor[0x00000fb3] -> 0xxx
out: 0x00000000 zero: 1 op_1: 0
############################
Time:                59940, Clock: 1
PC_IN_MUX.out: Zzzzzzzz
PC.out: Zzzzzzzz
PCNext.out: xxxxxxxx
PCNext.PC: Zzzzzzzz
IM.data_out: 0xxxxxxxxx
DCU.PC_IN_MUX_SEL: x
DCU.RF_WR_EN: x
DCU.RF_SEL_1: xx
DCU.RF_SEL_2: xx
DCU.RF_SEL_RD: xx
DCU.RF_DATA_IN_MUX_SEL: x
DCU.ALU_OP_1_MUX_SEL: x
DCU.ALU_OP_2_MUX_SEL: x
DCU.ALU_OPCODE: x
DCU.immediate: 0xxxxxxxxx
DCU.DATA_MEMORY_WR_EN: x
DCU.DATA_MEMORY_SIZE_SEL: x
DCU.DATA_MEMORY_SIGN_EXTEND: x
RF.reg_1: xxxxxxxx, RF.reg_2: xxxxxxxx
ALU_OP_1_MUX.out: Zzzzzzzz
ALU_OP_2_MUX.out: Zzzzzzzz
ALU_32.out: 00000000
DM.data_out: xxxxxxxx
RF_DATA_IN_MUX.out: Zzzzzzzz
write select xx
Writing to file!
addr: 0xZzzzzzzz
memor[0x00000fa0] -> 0xxx
make: Nothing to be done for `core'.
